{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSSName": {
      "type": "string",
      "metadata": {
        "description": "Scale Set name, also used in this template as a base for naming resources (hence limited to 9 characters or less)."
      },
      "maxLength": 10
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances"
      },
      "maxValue": 100
    },
    "zone": {
      "type": "string",
      "metadata": {
        "description": "1, 2, or 3"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    }
  },
  "variables": {
    "vmSize": "Standard_D1_v2",
    "virtualNetworkName": "[concat(parameters('vmssName'), 'vnet')]",
    "subnetName": "[concat(parameters('vmssName'), 'subnet')]",
    "nicName": "[concat(parameters('vmssName'), 'nic')]",
    "ipConfigName": "[concat(parameters('vmssName'), 'ipconfig')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "publicIPAddressName": "[concat(parameters('vmssName'), 'publicip')]",
    "networkSecurityGroupName": "[concat(parameters('vmssName'), 'nsg')]",
    "loadBalancerName": "[concat(parameters('vmssName'), 'lb')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
    "natPoolName": "[concat(parameters('vmssName'), 'natpool')]",
    "bePoolName": "[concat(parameters('vmssName'), 'bepool')]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/',variables('bePoolName'))]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "frontEndIPConfigID": "[concat(variables('lbID'), '/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "location": "[resourceGroup().location]",
    "osType": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "16.04-LTS",
      "version": "latest"
    },
    "imageReference": "[variables('osType')]",
    "computeApiVersion": "2017-12-01",
    "networkApiVersion": "2017-10-01"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "[variables('networkApiVersion')]",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[variables('location')]",
      "properties": {
          "securityRules": [
              {
                  "name": "allowSSH",
                  "properties": {
                      "description": "Allow SSH traffic",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "22",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound"
                  }
              },
              {
                  "name": "allowHTTP",
                  "properties": {
                      "description": "Allow web traffic",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "80",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1001,
                      "direction": "Inbound"
                  }
              }
          ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "location": "[variables('location')]",
      "apiVersion": "[variables('networkApiVersion')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "[variables('networkApiVersion')]",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "sku": {
          "name": "Standard"
      },
      "properties": {
          "publicIPAllocationMethod": "Static",
          "dnsSettings": {
              "domainNameLabel": "[parameters('vmssName')]"
          }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "[variables('networkApiVersion')]",
      "name": "[variables('loadBalancerName')]",
      "location": "[variables('location')]",
      "sku": {
          "name": "Standard"
      },
      "dependsOn": [
          "[variables('publicIPAddressName')]"
      ],
      "properties": {
          "frontendIPConfigurations": [
              {
                  "name": "LoadBalancerFrontEnd",
                  "properties": {
                      "publicIPAddress": {
                          "id": "[variables('publicIPAddressID')]"
                      }
                  }
              }
          ],
          "backendAddressPools": [
              {
                  "name": "[variables('bePoolName')]"
              }
          ],
          "probes": [
            {
              "name": "tcpProbe",
              "properties": {
                "protocol": "tcp",
                "port": 80,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ],
          "loadBalancingRules": [
            {
              "name": "LBRule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "backendAddressPool": {
                  "id": "[variables('lbPoolID')]"
                },
                "protocol": "tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[variables('lbProbeID')]"
                }
              }
            }
          ],
          "inboundNatPools": [
              {
                  "name": "[variables('natPoolName')]",
                  "properties": {
                      "frontendIPConfiguration": {
                          "id": "[variables('frontEndIPConfigID')]"
                      },
                      "protocol": "tcp",
                      "frontendPortRangeStart": "50000",
                      "frontendPortRangeEnd": "50100",
                      "backendPort": "22"
                  }
              }
          ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('vmssName')]",
      "location": "[variables('location')]",
      "zones": [
        "[parameters('zone')]"
      ],
      "apiVersion": "[variables('computeApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "sku": {
        "name": "[variables('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },
            "imageReference": "[variables('imageReference')]"
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmSSName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('bePoolName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                            {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools/', variables('loadBalancerName'), variables('natPoolName'))]"
                            }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "AppInstall",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "https://raw.githubusercontent.com/Azure-Samples/compute-automation-configurations/master/automate_nginx.sh"
                    ],
                    "commandToExecute": "bash automate_nginx.sh"
                  }
                }
              }
            ]
          }
        },
        "overprovision": "true"
      }
    }
  ]
}